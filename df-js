const myMain$$ = document.querySelector("main");

const getCharacter = async () => {
  const response = await fetch("https://starwars-server.vercel.app/characters");
  const res = await response.json();
  return res.data.characters;
};

const mapCharacters = (characters) => {
  return characters.map((character) => ({
    id: character._id,
    name: character.name,
    image: character.image,
    origin: character.origin,
    role: character.role,
  }));
};

const drawCharacters = (characters) => {
  // cada vez que se inicia la función  con este myMain que es lo que le hemos dicho en el bucle que contiene todo, le estamos borrando todo
  myMain$$.innerHTML = "";
  for (const character of characters) {
    
    let characterDiv = document.createElement("div");
    characterDiv.className = "main__div";

    let characterName = document.createElement("h1");
    characterName.textContent = character.name;

    let characterImage = document.createElement("img");
    characterImage.setAttribute("src", character.image);
    characterImage.setAttribute("alt", character.name);

    let characterRole = document.createElement("p");
    characterRole.textContent = character.role;

    let characterOrigin = document.createElement("p");
    characterOrigin.textContent = character.origin;

    characterDiv.appendChild(characterName);
    characterDiv.appendChild(characterImage);
    characterDiv.appendChild(characterRole);
    characterDiv.appendChild(characterOrigin);

    myMain$$.appendChild(characterDiv);
    //     let characterDiv = document.createElement("div");
    //     characterDiv.className = "main__div";
    //     characterDiv.innerHTML = `
    //        <figure>
    //         <h1>${character.name}</h1>
    //         <img src="${character.image}" alt="${character.name}">
    //         <p>${character.role}</p>
    //         <p>${character.origin}</p>
    //        </figure>
    //   `;
    //   myMain$$.appendChild(characterDiv)
  }
};

const drawInput = (characters) => {
  const input$$ = document.querySelector("input");
  input$$.addEventListener("input", ()=>
    searchCharacters(input$$.value, characters)
  );
};

searchCharacters = (filtro, array) => {
  let filteredCharacters = array.filter((character) =>
    character.name.toLowerCase().includes(filtro.toLowerCase())
  );
  drawCharacters(filteredCharacters);
};

const init = async () => {
  const characters = await getCharacter();
  const mappedCharacters = mapCharacters(characters);
  drawCharacters(mappedCharacters);
  drawInput(mappedCharacters);
};
init();





// 



// EJERCICIO BOTOM DOM. como hacer para elimninar la ultima y el otro

/*5.6 Dado el siguiente html y javascript, utiliza .filter() para mostrar por consola 
los streamers que incluyan la palabra introducida en el input. De esta forma, si 
introduzco 'Ru' me deberia de mostrar solo el streamer 'Rubius'. Si
introduzco 'i', me deberia de mostrar el streamer 'Rubius' e 'Ibai'.*/
const streamers3 = [
	{name: 'Rubius', age: 32, gameMorePlayed: 'Minecraft'},
	{name: 'Ibai', age: 25, gameMorePlayed: 'League of Legends'},
	{name: 'Reven', age: 43, gameMorePlayed: 'League of Legends'},
	{name: 'AuronPlay', age: 33, gameMorePlayed: 'Among Us'}
];

const myListaContainer = document.getElementById("principal")
console.log(myListaContainer);
  

const lista = document.createElement("ul");

const showJugador =(jugador) => { 
for (let stream of streamers3){
	const listItem = document.createElement("li");
	listItem.innerText = stream.name  + "   > con  " +   stream.age + " años -   " +stream.gameMorePlayed; // innertext?  ( a este li le vamos a dar un texto, en la primer facebood en la segunda nexflit ----etc ...)
	lista.append(listItem); // appnedchils tb funciona
	document.body.append(lista);
}
 }
 showJugador();

 const drawJugador = (jugador) => {   
    const input$$ = document.querySelector("input");  // seleccionamos el input 
    input$$.addEventListener("input", ()=> // evento input, cuando usuario escribe .escucha el evento y asiga una funcion 
      searchPokemons(input$$.value, jugador) //tenemos estos dos valores:  input$$.value : lo que el usuario ha escrito   - pokemons : array de pokemons original 
    );
  };
  
  searchJugadors = (filtro, jugador) => { // filtro : es lo que el usuario ha escrito   , pokdemons : array original de pokemons
    let jugadorFiltrado  = listItem.filter((jugador) => //a filter hay que pasarle tru o false y deuvle el array filtrado, es decir los elementos que hayan tenido un resultado de true
     jugador.name.toLowerCase().includes(filtro.toLowerCase()) 
    ); // todo los true se acumular en un array en la vaariable filteredPokemons
    showJugador(jugadorFiltrado);
  };
  
drawJugador()	
searchJugadors()
